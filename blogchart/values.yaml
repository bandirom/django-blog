global:
  defaultStorageClass: "nfs-client"

replicaCount: 1

image:
  repository: bandirom/django-blog
  pullPolicy: Always
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  # readOnlyRootFilesystem: true


service:
  type: ClusterIP
  port: 8000

ingress:
  enabled: true
  className: ""
  annotations:
    traefik.ingress.kubernetes.io/router.tls: "true"
  hosts:
    - host: blog.raspberry.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  initialDelaySeconds: 20
  periodSeconds: 60
  timeoutSeconds: 5
  httpGet:
    path: /application/health/
    port: http
readinessProbe:
  initialDelaySeconds: 20
  periodSeconds: 60
  timeoutSeconds: 5
  httpGet:
    path: /application/health/
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

#volumes:
#  - name: secrets-store-inline
#    csi:
#      driver: secrets-store.csi.k8s.io
#      readOnly: true
#      volumeAttributes:
#        secretProviderClass: "vault-application"
#
#volumeMounts:
#  - name: secrets-store-inline
#    mountPath: "/mnt/secrets-store"

nodeSelector: {}

tolerations: []

affinity: {}

persistentVolumeClaim:
  storageClassName: "nfs-client"
  storageSize: 3Gi

postgresql:
  enabled: true
  architecture: standalone
  auth:
    username: "blog-user"
    password: "xFNYNrP7BV70B6XSfVx6Gts1Qk9jSNl2"
    database: "blog-db"
    enablePostgresUser: false
  primary:
    persistence:
      storageClass: "nfs-client"
      size: 5Gi


redis:
  enabled: true
  architecture: standalone
  port: "6379"
  auth:
    enabled: false
  master:
    persistence:
      enabled: false

project:
  secretKey: "abcEFG"
  postgresUser: "postgres"
  healthCheckUrl: "/application/health/"
  microserviceName: "Blog Microservice"

celery:
  args:
    - "celery"
    - "-A"
    - "src"
    - "worker"
    - "-l"
    - "info"

envs:
  - name: TEST_PASSWORD
    valueFrom:
      secretKeyRef:
        name: vso-handled
        key: password
  - name: NEW_KEY
    valueFrom:
      secretKeyRef:
        name: vso-handled
        key: newKey
