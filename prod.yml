x-variables: &variables
  ENV_STAGE: dev

services:
  blog:
    image: bandirom/blog:${APP_VERSION:-latest}
    volumes:
      - redis_socket:/redis_socket
      - postgres_socket:/postgres_socket
      - media_files:/web/media/
    environment:
      <<: *variables
    ports:
      - "8000:8000"
    env_file:
      - docker/prod/env/.env
      - docker/prod/env/.db.env
      - docker/prod/env/.gunicorn.env
      - docker/prod/env/.data.env
    depends_on: [db, redis]
    restart: always
    networks:
      - microservice_network
      - separated_network
    healthcheck:
      test: curl --fail -s http://localhost:8000$$HEALTH_CHECK_URL || exit 1
      interval: 1m30s
      timeout: 3s
      retries: 3
    extra_hosts:
      - "gateway-host:172.17.0.1"
  celery:
    image: bandirom/blog:${APP_VERSION:-latest}
    entrypoint: ""
    command: celery -A src worker --beat -l info
    env_file:
      - docker/prod/env/.env
      - docker/prod/env/.db.env
      - docker/prod/env/.data.env
    environment:
      <<: *variables
    depends_on: [redis]
    restart: always
    volumes:
      - redis_socket:/redis_socket
      - postgres_socket:/postgres_socket
    networks:
      - separated_network
    extra_hosts:
      - "gateway-host:172.17.0.1"
  db:
    image: postgres:15.1-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - postgres_socket:/var/run/postgresql/
    env_file:
      - docker/prod/env/.db.env
    restart: always
    networks:
      - separated_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER" ]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:7.0.8-alpine
    restart: always
    command: ["/var/lib/redis/redis.conf"]
    volumes:
      - ./docker/prod/redis/redis.conf:/var/lib/redis/redis.conf
      - redis_data:/data
      - redis_socket:/redis_socket
    networks:
      - separated_network
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
      interval: 1m20s
      timeout: 5s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  redis_socket:
  postgres_socket:
  media_files:

networks:
  microservice_network:
    driver: bridge
  separated_network:
    driver: bridge
